{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { SignUpComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes:Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'signup', component: SignUpComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports:[ RouterModule.forChild(routes) ],\r\n    exports:[RouterModule]\r\n})\r\nexport class AuthRoutingModule {}","import { FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './../angular-material.module';\r\nimport { SignUpComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n    declarations:[\r\n        LoginComponent,\r\n        SignUpComponent,    \r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        FormsModule,\r\n        AuthRoutingModule\r\n    ]\r\n})\r\nexport class AuthModule{}","import { Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n@Component({\r\n    templateUrl:'./login.component.html',\r\n    styleUrls:['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy{\r\n    private authStatusSub: Subscription;\r\n    constructor(public authService:AuthService){}\r\n    ngOnInit(){\r\n        this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus=>{\r\n            this.isLoading = false;\r\n\r\n        });\r\n    }\r\n    ngOnDestroy(){\r\n        this.authStatusSub.unsubscribe();\r\n    }\r\n    isLoading=false;\r\n\r\n    onLogin(form:NgForm){\r\n        if(form.invalid){\r\n            return;\r\n        }\r\n        this.isLoading=true;\r\n        this.authService.login(form.value.email,form.value.password);    \r\n    }\r\n}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    <form  *ngIf=\"!isLoading\" #loginForm='ngForm' (submit)=\"onLogin(loginForm)\">\r\n        <mat-form-field>\r\n            <input type=\"email\" name='email' ngModel matInput placeholder=\"Email\" #emailInput='ngModel' required email>\r\n            <mat-error *ngIf=\"emailInput.invalid\">Please Enter Valid Email!</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"password\" matInput placeholder=\"Password\" name='password' ngModel #passwordInput='ngModel' required>\r\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password!</mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color='accent' type=\"submit\" *ngIf=\"!isLoading\">Login</button>\r\n    </form>\r\n</mat-card>","import { Subscription } from 'rxjs';\r\nimport { AuthService } from './../auth.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n    templateUrl:'./signup.component.html',\r\n    styleUrls:['./signup.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy{\r\n    private authStatusSub: Subscription;\r\n\r\n    constructor(public authService:AuthService){}\r\n    ngOnInit(){\r\n        this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus=>{\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n    ngOnDestroy(){\r\n        this.authStatusSub.unsubscribe();\r\n    }\r\n\r\n    isLoading=false;\r\n\r\n    onSignup(form:NgForm){ \r\n        if(form.invalid){\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        this.authService.createUser(form.value.email,form.value.password);\r\n    }\r\n\r\n\r\n}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    <form  *ngIf=\"!isLoading\" #signupform='ngForm' (submit)=\"onSignup(signupform)\">\r\n        <mat-form-field>\r\n            <input type=\"email\" name='email' ngModel matInput placeholder=\"Email\" #emailInput='ngModel' required email>\r\n            <mat-error *ngIf=\"emailInput.invalid\">Please Enter Valid Email!</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"password\" matInput placeholder=\"Password\" name='password' ngModel #passwordInput='ngModel' required>\r\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password!</mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color='accent' type=\"submit\" *ngIf=\"!isLoading\" >Signup</button>\r\n    </form>\r\n</mat-card>"],"sourceRoot":"webpack:///"}