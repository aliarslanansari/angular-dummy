{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html"],"names":["routes","path","component","AuthRoutingModule","forChild","imports","exports","AuthModule","declarations","LoginComponent","authService","isLoading","authStatusSub","getAuthStatusListener","subscribe","authStatus","unsubscribe","form","invalid","login","value","email","password","templateUrl","styleUrls","SignUpComponent","createUser"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAU,CAClB;AAAEC,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KADkB,EAElB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAFkB,CAAtB;;QASaC,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHlB,CAAE,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAF,CAGkB,EAFjB,4DAEiB;;;;0HAAjBG,iB,EAAiB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEZA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACNE,iBAAO,EAAC,CAAE,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAF,CADF;AAENM,iBAAO,EAAC,CAAC,4DAAD;AAFF,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACd9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAPX,CACJ,4DADI,EAEJ,8EAFI,EAGJ,0DAHI,EAIJ,sEAJI,CAOW;;;;0HAAVA,U,EAAU;AAAA,uBAVf,qEAUe,EATf,wEASe;AATA,kBAGf,4DAHe,EAIf,8EAJe,EAKf,0DALe,EAMf,sEANe;AASA,O;AAHE,K;;;;;sEAGZA,U,EAAU;cAZtB,sDAYsB;eAZb;AACNC,sBAAY,EAAC,CACT,qEADS,EAET,wEAFS,CADP;AAKNH,iBAAO,EAAC,CACJ,4DADI,EAEJ,8EAFI,EAGJ,0DAHI,EAIJ,sEAJI;AALF,S;AAYa,Q;;;;;;;;;;;;;;;;;;ACnBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;;;;;AAIQ;;AAAsC;;AAAyB;;;;;;AAI/D;;AAAyC;;AAA8B;;;;;;AAE3E;;AAA0E;;AAAK;;;;;;;;AATnF;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACJ;;;;;;;;;;AAPmB;;AAAA;;AAIA;;AAAA;;AAEwC;;AAAA;;;;QDHlDI,c;AAET,8BAAmBC,WAAnB,EAA0C;AAAA;;AAAvB,aAAAA,WAAA,GAAAA,WAAA;AAUnB,aAAAC,SAAA,GAAU,KAAV;AAV6C;;;;mCACrC;AAAA;;AACJ,eAAKC,aAAL,GAAqB,KAAKF,WAAL,CAAiBG,qBAAjB,GAAyCC,SAAzC,CAAmD,UAAAC,UAAU,EAAE;AAChF,iBAAI,CAACJ,SAAL,GAAiB,KAAjB;AAEH,WAHoB,CAArB;AAIH;;;sCACU;AACP,eAAKC,aAAL,CAAmBI,WAAnB;AACH;;;gCAGOC,I,EAAW;AACf,cAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ;AACH;;AACD,eAAKP,SAAL,GAAe,IAAf;AACA,eAAKD,WAAL,CAAiBS,KAAjB,CAAuBF,IAAI,CAACG,KAAL,CAAWC,KAAlC,EAAwCJ,IAAI,CAACG,KAAL,CAAWE,QAAnD;AACH;;;;;;;uBApBQb,c,EAAc,0H;AAAA,K;;;YAAdA,c;AAAc,mC;AAAA,c;AAAA,a;AAAA,6gB;AAAA;AAAA;ACR3B;;AACI;;AACA;;AAWJ;;;;AAZiB;;AAAA;;AACN;;AAAA;;;;;;;;;sEDMEA,c,EAAc;cAJ1B,uDAI0B;eAJhB;AACPc,qBAAW,EAAC,wBADL;AAEPC,mBAAS,EAAC,CAAC,uBAAD;AAFH,S;AAIgB,Q;;;;;;;;;;;;;;;;;;;;;;AEN3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDI;;;;;;AAIQ;;AAAsC;;AAAyB;;;;;;AAI/D;;AAAyC;;AAA8B;;;;;;AAE3E;;AAA2E;;AAAM;;;;;;;;AATrF;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACJ;;;;;;;;;;AAPmB;;AAAA;;AAIA;;AAAA;;AAEwC;;AAAA;;;;QDHlDC,e;AAGT,+BAAmBf,WAAnB,EAA0C;AAAA;;AAAvB,aAAAA,WAAA,GAAAA,WAAA;AAUnB,aAAAC,SAAA,GAAU,KAAV;AAV6C;;;;mCACrC;AAAA;;AACJ,eAAKC,aAAL,GAAqB,KAAKF,WAAL,CAAiBG,qBAAjB,GAAyCC,SAAzC,CAAmD,UAAAC,UAAU,EAAE;AAChF,kBAAI,CAACJ,SAAL,GAAiB,KAAjB;AACH,WAFoB,CAArB;AAGH;;;sCACU;AACP,eAAKC,aAAL,CAAmBI,WAAnB;AACH;;;iCAIQC,I,EAAW;AAChB,cAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ;AACH;;AACD,eAAKP,SAAL,GAAiB,IAAjB;AACA,eAAKD,WAAL,CAAiBgB,UAAjB,CAA4BT,IAAI,CAACG,KAAL,CAAWC,KAAvC,EAA6CJ,IAAI,CAACG,KAAL,CAAWE,QAAxD;AACH;;;;;;;uBArBQG,e,EAAe,0H;AAAA,K;;;YAAfA,e;AAAe,mC;AAAA,c;AAAA,a;AAAA,8gB;AAAA;AAAA;ACR5B;;AACI;;AACA;;AAWJ;;;;AAZiB;;AAAA;;AACN;;AAAA;;;;;;;;;sEDMEA,e,EAAe;cAJ3B,uDAI2B;eAJjB;AACPF,qBAAW,EAAC,yBADL;AAEPC,mBAAS,EAAC,CAAC,wBAAD;AAFH,S;AAIiB,Q","file":"auth-auth-module-es5.js","sourcesContent":["import { SignUpComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes:Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'signup', component: SignUpComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports:[ RouterModule.forChild(routes) ],\r\n    exports:[RouterModule]\r\n})\r\nexport class AuthRoutingModule {}","import { FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './../angular-material.module';\r\nimport { SignUpComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n    declarations:[\r\n        LoginComponent,\r\n        SignUpComponent,    \r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        FormsModule,\r\n        AuthRoutingModule\r\n    ]\r\n})\r\nexport class AuthModule{}","import { Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n@Component({\r\n    templateUrl:'./login.component.html',\r\n    styleUrls:['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy{\r\n    private authStatusSub: Subscription;\r\n    constructor(public authService:AuthService){}\r\n    ngOnInit(){\r\n        this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus=>{\r\n            this.isLoading = false;\r\n\r\n        });\r\n    }\r\n    ngOnDestroy(){\r\n        this.authStatusSub.unsubscribe();\r\n    }\r\n    isLoading=false;\r\n\r\n    onLogin(form:NgForm){\r\n        if(form.invalid){\r\n            return;\r\n        }\r\n        this.isLoading=true;\r\n        this.authService.login(form.value.email,form.value.password);    \r\n    }\r\n}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    <form  *ngIf=\"!isLoading\" #loginForm='ngForm' (submit)=\"onLogin(loginForm)\">\r\n        <mat-form-field>\r\n            <input type=\"email\" name='email' ngModel matInput placeholder=\"Email\" #emailInput='ngModel' required email>\r\n            <mat-error *ngIf=\"emailInput.invalid\">Please Enter Valid Email!</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"password\" matInput placeholder=\"Password\" name='password' ngModel #passwordInput='ngModel' required>\r\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password!</mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color='accent' type=\"submit\" *ngIf=\"!isLoading\">Login</button>\r\n    </form>\r\n</mat-card>","import { Subscription } from 'rxjs';\r\nimport { AuthService } from './../auth.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n    templateUrl:'./signup.component.html',\r\n    styleUrls:['./signup.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy{\r\n    private authStatusSub: Subscription;\r\n\r\n    constructor(public authService:AuthService){}\r\n    ngOnInit(){\r\n        this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus=>{\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n    ngOnDestroy(){\r\n        this.authStatusSub.unsubscribe();\r\n    }\r\n\r\n    isLoading=false;\r\n\r\n    onSignup(form:NgForm){ \r\n        if(form.invalid){\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        this.authService.createUser(form.value.email,form.value.password);\r\n    }\r\n\r\n\r\n}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    <form  *ngIf=\"!isLoading\" #signupform='ngForm' (submit)=\"onSignup(signupform)\">\r\n        <mat-form-field>\r\n            <input type=\"email\" name='email' ngModel matInput placeholder=\"Email\" #emailInput='ngModel' required email>\r\n            <mat-error *ngIf=\"emailInput.invalid\">Please Enter Valid Email!</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"password\" matInput placeholder=\"Password\" name='password' ngModel #passwordInput='ngModel' required>\r\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password!</mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color='accent' type=\"submit\" *ngIf=\"!isLoading\" >Signup</button>\r\n    </form>\r\n</mat-card>"]}